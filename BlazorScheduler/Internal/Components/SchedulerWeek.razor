@namespace BlazorScheduler.Internal.Components

<div class="week">
    <div class="days" style="--maxAppointments: @MaxVisibleAppointmentsThisWeek; @Scheduler.RootDaysGroupInWeekStyle">
        @for (var dt = Start; dt <= End; dt = dt.AddDays(1))
        {
            <SchedulerDay Day="dt" @key="dt"/>
        }
    </div>

    <div class="appointments">
        @foreach (var (appointment, order) in _orderings)
        {
            int maxOrderOfSpan = _orderings
                .Where(x => (x.Key.Start.Date, x.Key.End.Date).Overlaps((appointment.Start.Date, appointment.End.Date)) && !Scheduler.IsDayBeingScheduled(x.Key))
                .Max(x => (int?)x.Value) ?? 0;
            if (order < MaxNumOfAppointmentsPerDay || (order == MaxNumOfAppointmentsPerDay && maxOrderOfSpan <= MaxNumOfAppointmentsPerDay) || Scheduler.IsDayBeingScheduled(appointment))
            {
                bool isTimedAppointment = appointment.Start.Date == appointment.End.Date && appointment.Start != appointment.End;
                if (isTimedAppointment)
                {
                    <SchedulerAppointment Appointment="appointment" Order="order" @key="appointment" />
                }
                else
                {
                    var (start, end) = _startsAndEnds[appointment];
                    <SchedulerAllDayAppointment Appointment="appointment" Order="order" Start="start" End="end" @key="appointment" />
                }
            }
        }
        @for (var dt = Start; dt <= End; dt = dt.AddDays(1))
        {
            var todaysAppointments = _orderings.Where(x => dt.Between(x.Key.Start.Date, x.Key.End.Date) && !Scheduler.IsDayBeingScheduled(x.Key));
            int maxOrder = todaysAppointments.Max(x => (int?)x.Value) ?? 0;
            if (maxOrder > MaxNumOfAppointmentsPerDay)
            {
                var numOverFlowAppointments = todaysAppointments.Count(x => x.Value > MaxNumOfAppointmentsPerDay - 1);
                <SchedulerAppointmentOverflow Day="dt"
                    AppointmentCount="numOverFlowAppointments"
                    Start="(dt.DayOfWeek - Scheduler.StartDayOfWeek + 7) % 7"
                    Order="MaxNumOfAppointmentsPerDay"
                    @key="dt" Style="@Scheduler.RootAppointmentOverflowStyle" />
            }
        }
    </div>
</div>